apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "cbr0",
          "interface": "eth0",
          "ips": [
              "10.233.66.98"
          ],
          "mac": "0e:30:71:7a:b6:f8",
          "default": true,
          "dns": {}
      }]
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "cbr0",
          "interface": "eth0",
          "ips": [
              "10.233.66.98"
          ],
          "mac": "0e:30:71:7a:b6:f8",
          "default": true,
          "dns": {}
      }]
  creationTimestamp: "2021-08-31T14:55:21Z"
  generateName: rsync-
  labels:
    app: crane2
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:containers:
          k:{"name":"rsync"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"RSYNC_PASSWORD"}:
                .: {}
                f:name: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/mnt/inventory-src/e014b7030e0617f795446986efdab054"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/usr/share/rsync"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"mnt"}:
            .: {}
            f:name: {}
            f:persistentVolumeClaim:
              .: {}
              f:claimName: {}
          k:{"name":"rsync-communication"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
    manager: crane
    operation: Update
    time: "2021-08-31T14:55:21Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:k8s.v1.cni.cncf.io/network-status: {}
          f:k8s.v1.cni.cncf.io/networks-status: {}
    manager: multus
    operation: Update
    time: "2021-08-31T14:55:23Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.233.66.98"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2021-08-31T14:57:25Z"
  name: rsync-vcb4v
  namespace: inventory-marco
  resourceVersion: "49953300"
  selfLink: /api/v1/namespaces/inventory-src/pods/rsync-vcb4v
  uid: c0535186-6c9d-493f-b5bb-929b0174d4de
spec:
  containers:
  - command:
    - /bin/bash
    - -c
    - trap "touch /usr/share/rsync/rsync-client-container-done" EXIT SIGINT SIGTERM;
      timeout=120; SECONDS=0; while [ $SECONDS -lt $timeout ]; do /usr/bin/rsync --recursive
      --links --perms --devices --specials --times --owner --group --human-readable
      --log-file=/dev/stdout --info=COPY2,DEL2,REMOVE2,SKIP2,FLIST2,PROGRESS2,STATS2
      /mnt/inventory-src/e014b7030e0617f795446986efdab054/ rsync://root@data-inventory-postgresql-0.shawn-test-1.svc.cluster.local/e014b7030e0617f795446986efdab054
      --port 2222; rc=$?; done; exit $rc;
    env:
    - name: RSYNC_PASSWORD
    image: quay.io/konveyor/rsync-transfer:latest
    imagePullPolicy: Always
    name: rsync
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /mnt/inventory-src/e014b7030e0617f795446986efdab054
      name: mnt
    - mountPath: /usr/share/rsync
      name: rsync-communication
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-flp97
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: mnt
    persistentVolumeClaim:
      claimName: data-inventory-postgresql-0
  - emptyDir: {}
    name: rsync-communication
  - name: kube-api-access-flp97
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
